generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin", "debian-openssl-1.1.x", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model split {
  id             Int          @id @default(autoincrement())
  transaction_id Int?
  user_id        Int?
  amount         Int?
  reviewed       Boolean?
  transaction    transaction? @relation(fields: [transaction_id], references: [id])
  user           user?        @relation(fields: [user_id], references: [id])
}

model account {
  id             Int           @id @default(autoincrement())
  account_number String?       @unique @db.VarChar(50)
  name           String?       @db.VarChar(255)
  bank_import    bank_import[]
  transaction    transaction[]
}

model transaction {
  id          Int          @id @default(autoincrement())
  bank_id     String?      @unique @db.VarChar(255)
  date        DateTime?    @db.Date
  amount      Int?
  details     String?      @db.VarChar(1000)
  account_id  Int?
  import_id   Int?
  account     account?     @relation(fields: [account_id], references: [id])
  bank_import bank_import? @relation(fields: [import_id], references: [id])
  split       split[]
}

model user {
  id    Int     @id @default(autoincrement())
  name  String? @db.VarChar(255)
  email String? @db.VarChar(255)
  split split[]
}

model bank_import {
  id          Int           @id @default(autoincrement())
  account_id  Int
  start_date  DateTime      @db.Date
  end_date    DateTime      @db.Date
  account     account       @relation(fields: [account_id], references: [id])
  transaction transaction[]
}
